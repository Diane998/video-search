{"version":3,"sources":["apis/youtube.js","Components/SearchBar/SearchBar.js","Components/VideoItem/VideoItem.js","Components/VideoList/VideoList.js","Components/VideoDetail/VideoDetail.js","Components/App.js","index.js"],"names":["axios","create","baseURL","params","part","type","maxResults","key","SearchBar","state","term","onFormSubmit","e","preventDefault","props","onSubmit","className","this","value","onChange","setState","target","Component","VideoItem","video","onVideoSelect","onClick","alt","snippet","title","src","thumbnails","medium","url","VideoList","videos","videoList","map","id","videoId","VideoDetail","description","App","selectedVideo","a","youtube","get","q","res","data","items","ReactDOM","render","document","querySelector"],"mappings":"8OAIeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCACTC,OAAQ,CACNC,KAAM,UACNC,KAAM,QACNC,WAAY,EACZC,IAAI,GAAD,OARK,8CC0BGC,E,4MAzBbC,MAAQ,CAAEC,KAAM,I,EAmBhBC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAnBvB,IAAD,OACP,OACE,qBAAKM,UAAU,wBAAf,SACE,sBAAMD,SAAUE,KAAKN,aAAcK,UAAU,UAA7C,SACE,sBAAKA,UAAU,QAAf,UACE,iDACA,uBACEX,KAAK,OACLa,MAAOD,KAAKR,MAAMC,KAClBS,SAAU,SAAAP,GAAC,OAAI,EAAKQ,SAAS,CAAEV,KAAME,EAAES,OAAOH,sB,GAZpCI,aCwBTC,G,MAfG,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cAC1B,OACE,sBAAKT,UAAU,kBAAkBU,QAAS,kBAAMD,EAAcD,IAA9D,UACE,qBACER,UAAU,WACVW,IAAKH,EAAMI,QAAQC,MACnBC,IAAKN,EAAMI,QAAQG,WAAWC,OAAOC,MAEvC,qBAAKjB,UAAU,UAAf,SACE,qBAAKA,UAAU,SAAf,SAAyBQ,EAAMI,QAAQC,eCHhCK,EAdG,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,OAAQV,EAAoB,EAApBA,cACrBW,EAAYD,EAAOE,KAAI,SAAAb,GAC3B,OACE,cAAC,EAAD,CAEEC,cAAeA,EACfD,MAAOA,GAFFA,EAAMc,GAAGC,YAOpB,OAAO,qBAAKvB,UAAU,0BAAf,SAA0CoB,KCOpCI,EAnBK,SAAC,GAAe,IAAbhB,EAAY,EAAZA,MACrB,OAAQA,EAGN,gCACE,qBAAKR,UAAU,WAAf,SACE,wBACEa,MAAM,eACNC,IAAG,kCAA6BN,EAAMc,GAAGC,aAG7C,sBAAKvB,UAAU,aAAf,UACE,6BAAKQ,EAAMI,QAAQC,QACnB,4BAAIL,EAAMI,QAAQa,oBAXtB,8CC2CWC,E,4MAxCbjC,MAAQ,CAAE0B,OAAQ,GAAIQ,cAAe,M,EA2BrChC,a,uCAAe,WAAMD,GAAN,eAAAkC,EAAA,sEACKC,EAAQC,IAAI,UAAW,CACvC3C,OAAQ,CAAE4C,EAAGrC,KAFF,OACPsC,EADO,OAKb,EAAK5B,SAAS,CAAEe,OAAQa,EAAIC,KAAKC,MAAOP,cAAeK,EAAIC,KAAKC,MAAM,KALzD,2C,wDAQfzB,cAAgB,SAAAD,GACd,EAAKJ,SAAS,CAAEuB,cAAenB,K,uDAjC/B,OACE,sBAAKR,UAAU,eAAf,UACE,cAAC,EAAD,CAAWD,SAAUE,KAAKN,eAC1B,qBAAKK,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,EAAD,CAAaQ,MAAOP,KAAKR,MAAMkC,kBAEjC,qBAAK3B,UAAU,mBAAf,SACE,cAAC,EAAD,CACES,cAAeR,KAAKQ,cACpBU,OAAQlB,KAAKR,MAAM0B,qB,0CAU/BlB,KAAKN,aAAa,iB,GAzBJW,aCFlB6B,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,cAAc,Y","file":"static/js/main.df93becf.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst KEY = 'AIzaSyB2Di1d7mbZLqjPwrSpdK17OBnzC655hS0';\n\nexport default axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3',\n  params: {\n    part: 'snippet',\n    type: 'video',\n    maxResults: 5,\n    key: `${KEY}`,\n  },\n});\n","import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n  state = { term: '' };\n\n  render() {\n    return (\n      <div className=\"search-bar ui segment\">\n        <form onSubmit={this.onFormSubmit} className=\"ui form\">\n          <div className=\"field\">\n            <label>Video Search</label>\n            <input\n              type=\"text\"\n              value={this.state.term}\n              onChange={e => this.setState({ term: e.target.value })}\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n\n  onFormSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.term);\n  };\n}\n\nexport default SearchBar;\n","// import React, { Component } from 'react';\n\n// class VideoItem extends Component {\n//   constructor(props) {\n//     super(props);\n//   }\n// }\n\nimport React from 'react';\nimport './VideoItem.css';\n\nconst VideoItem = ({ video, onVideoSelect }) => {\n  return (\n    <div className=\"video-item item\" onClick={() => onVideoSelect(video)}>\n      <img\n        className=\"ui image\"\n        alt={video.snippet.title}\n        src={video.snippet.thumbnails.medium.url}\n      />\n      <div className=\"content\">\n        <div className=\"header\">{video.snippet.title}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoItem;\n","import React from 'react';\nimport VideoItem from '../VideoItem/VideoItem';\n\nconst VideoList = ({ videos, onVideoSelect }) => {\n  const videoList = videos.map(video => {\n    return (\n      <VideoItem\n        key={video.id.videoId}\n        onVideoSelect={onVideoSelect}\n        video={video}\n      />\n    );\n  });\n\n  return <div className=\"ui relaxed divided list\">{videoList}</div>;\n};\n\nexport default VideoList;\n","import React from 'react';\n\nconst VideoDetail = ({ video }) => {\n  return !video ? (\n    <div>Loading...</div>\n  ) : (\n    <div>\n      <div className=\"ui embed\">\n        <iframe\n          title=\"video player\"\n          src={`https:youtube.com/embed/${video.id.videoId}`}\n        ></iframe>\n      </div>\n      <div className=\"ui segment\">\n        <h4>{video.snippet.title}</h4>\n        <p>{video.snippet.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default VideoDetail;\n","import React, { Component } from 'react';\nimport youtube from '../apis/youtube';\nimport SearchBar from './SearchBar/SearchBar';\nimport VideoList from './VideoList/VideoList';\nimport VideoDetail from '../Components/VideoDetail/VideoDetail';\n\nclass App extends Component {\n  state = { videos: [], selectedVideo: null };\n\n  render() {\n    return (\n      <div className=\"ui container\">\n        <SearchBar onSubmit={this.onFormSubmit} />\n        <div className=\"ui grid\">\n          <div className=\"ui row\">\n            <div className=\"eleven wide column\">\n              <VideoDetail video={this.state.selectedVideo} />\n            </div>\n            <div className=\"five wide column\">\n              <VideoList\n                onVideoSelect={this.onVideoSelect}\n                videos={this.state.videos}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    this.onFormSubmit('buildings');\n  }\n\n  onFormSubmit = async term => {\n    const res = await youtube.get('/search', {\n      params: { q: term },\n    });\n\n    this.setState({ videos: res.data.items, selectedVideo: res.data.items[0] });\n  };\n\n  onVideoSelect = video => {\n    this.setState({ selectedVideo: video });\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}